correlations <- data.frame(stringsAsFactors = FALSE)
for(x in 1:length(songlist)) {
songdata <- data.frame()
songdata <- subset(corpus, corpus$song == songlist[[x]])
pitchCorr <- abs(cor(as.numeric(songdata$diatonicNumber), as.numeric(songdata$vowelCategory)))
beatCorr <- abs(cor(as.numeric(songdata$beat), as.numeric(songdata$vowelCategory)))
beatStrengthCorr <- abs(cor(as.numeric(songdata$beatStrength), as.numeric(songdata$vowelCategory)))
durCorr <- abs(cor(as.numeric(songdata$duration), as.numeric(songdata$vowelCategory)))
stressCorr <- abs(cor(as.numeric(songdata$stress), as.numeric(songdata$vowelCategory)))
dataRow <- c(as.character(songlist[[x]]), as.numeric(pitchCorr), as.numeric(beatCorr), as.numeric(beatStrengthCorr), as.numeric(durCorr), as.numeric(stressCorr))
print(class(dataRow))
correlations <- rbind(correlations, dataRow)
}
colnames(correlations) <- c('song', 'pitch', 'beat', 'beatStrength', 'duration', 'stress')
correlations
corpus <- data.frame()
corpus <- read.csv('ParsedTextAndMusic/00-corpus.csv')
features <- colnames(corpus)
songlist <- unique(corpus$song)
correlations <- data.frame(stringsAsFactors = FALSE)
for(x in 1:length(songlist)) {
songdata <- data.frame()
songdata <- subset(corpus, corpus$song == songlist[[x]])
pitchCorr <- abs(cor(as.numeric(songdata$diatonicNumber), as.numeric(songdata$vowelCategory)))
beatCorr <- abs(cor(as.numeric(songdata$beat), as.numeric(songdata$vowelCategory)))
beatStrengthCorr <- abs(cor(as.numeric(songdata$beatStrength), as.numeric(songdata$vowelCategory)))
durCorr <- abs(cor(as.numeric(songdata$duration), as.numeric(songdata$vowelCategory)))
stressCorr <- abs(cor(as.numeric(songdata$stress), as.numeric(songdata$vowelCategory)))
dataRow <- c(as.character(songlist[[x]]), as.numeric(pitchCorr), as.numeric(beatCorr), as.numeric(beatStrengthCorr), as.numeric(durCorr), as.numeric(stressCorr))
correlations <- rbind(correlations, dataRow)
}
colnames(correlations) <- c('song', 'pitch', 'beat', 'beatStrength', 'duration', 'stress')
correlations
corpus <- data.frame()
corpus <- read.csv('ParsedTextAndMusic/00-corpus.csv')
features <- colnames(corpus)
songlist <- unique(corpus$song)
correlations <- data.frame(stringsAsFactors = FALSE)
for(x in 1:length(songlist)) {
songdata <- data.frame()
songdata <- subset(corpus, corpus$song == songlist[[x]])
pitchCorr <- abs(cor(as.numeric(songdata$diatonicNumber), as.numeric(songdata$vowelCategory)))
beatCorr <- abs(cor(as.numeric(songdata$beat), as.numeric(songdata$vowelCategory)))
beatStrengthCorr <- abs(cor(as.numeric(songdata$beatStrength), as.numeric(songdata$vowelCategory)))
durCorr <- abs(cor(as.numeric(songdata$duration), as.numeric(songdata$vowelCategory)))
stressCorr <- abs(cor(as.numeric(songdata$stress), as.numeric(songdata$vowelCategory)))
dataRow <- data.frame()
dataRow <- c(as.character(songlist[[x]]), as.numeric(pitchCorr), as.numeric(beatCorr), as.numeric(beatStrengthCorr), as.numeric(durCorr), as.numeric(stressCorr))
correlations <- rbind(correlations, dataRow)
}
colnames(correlations) <- c('song', 'pitch', 'beat', 'beatStrength', 'duration', 'stress')
correlations
corpus <- data.frame()
corpus <- read.csv('ParsedTextAndMusic/00-corpus.csv')
features <- colnames(corpus)
songlist <- corpus$song[!duplicated(corpus$song),]
correlations <- data.frame(stringsAsFactors = FALSE)
for(x in 1:length(songlist)) {
songdata <- data.frame()
songdata <- subset(corpus, corpus$song == songlist[[x]])
pitchCorr <- abs(cor(as.numeric(songdata$diatonicNumber), as.numeric(songdata$vowelCategory)))
beatCorr <- abs(cor(as.numeric(songdata$beat), as.numeric(songdata$vowelCategory)))
beatStrengthCorr <- abs(cor(as.numeric(songdata$beatStrength), as.numeric(songdata$vowelCategory)))
durCorr <- abs(cor(as.numeric(songdata$duration), as.numeric(songdata$vowelCategory)))
stressCorr <- abs(cor(as.numeric(songdata$stress), as.numeric(songdata$vowelCategory)))
dataRow <- data.frame()
dataRow <- c(as.character(songlist[[x]]), as.numeric(pitchCorr), as.numeric(beatCorr), as.numeric(beatStrengthCorr), as.numeric(durCorr), as.numeric(stressCorr))
correlations <- rbind(correlations, dataRow)
}
colnames(correlations) <- c('song', 'pitch', 'beat', 'beatStrength', 'duration', 'stress')
correlations
songlist
class(songlist)
class(songlist)[[1]]
class(corpus$song[[1]])
class(corpus$song) <- character
corpus <- data.frame(stringsAsFactors = FALSE)
corpus <- read.csv('ParsedTextAndMusic/00-corpus.csv')
features <- colnames(corpus)
songlist <- corpus$song[!duplicated(corpus$song),]
correlations <- data.frame(stringsAsFactors = FALSE)
for(x in 1:length(songlist)) {
songdata <- data.frame()
songdata <- subset(corpus, corpus$song == songlist[[x]])
pitchCorr <- abs(cor(as.numeric(songdata$diatonicNumber), as.numeric(songdata$vowelCategory)))
beatCorr <- abs(cor(as.numeric(songdata$beat), as.numeric(songdata$vowelCategory)))
beatStrengthCorr <- abs(cor(as.numeric(songdata$beatStrength), as.numeric(songdata$vowelCategory)))
durCorr <- abs(cor(as.numeric(songdata$duration), as.numeric(songdata$vowelCategory)))
stressCorr <- abs(cor(as.numeric(songdata$stress), as.numeric(songdata$vowelCategory)))
dataRow <- data.frame()
dataRow <- c(as.character(songlist[[x]]), as.numeric(pitchCorr), as.numeric(beatCorr), as.numeric(beatStrengthCorr), as.numeric(durCorr), as.numeric(stressCorr))
correlations <- rbind(correlations, dataRow)
}
colnames(correlations) <- c('song', 'pitch', 'beat', 'beatStrength', 'duration', 'stress')
correlations
warnings()
class(corpus$song[[1]])
corpus <- data.frame(stringsAsFactors = FALSE)
corpus <- read.csv('ParsedTextAndMusic/00-corpus.csv', stringsAsFactors = FALSE)
features <- colnames(corpus)
songlist <- corpus$song[!duplicated(corpus$song),]
correlations <- data.frame(stringsAsFactors = FALSE)
for(x in 1:length(songlist)) {
songdata <- data.frame()
songdata <- subset(corpus, corpus$song == songlist[[x]])
pitchCorr <- abs(cor(as.numeric(songdata$diatonicNumber), as.numeric(songdata$vowelCategory)))
beatCorr <- abs(cor(as.numeric(songdata$beat), as.numeric(songdata$vowelCategory)))
beatStrengthCorr <- abs(cor(as.numeric(songdata$beatStrength), as.numeric(songdata$vowelCategory)))
durCorr <- abs(cor(as.numeric(songdata$duration), as.numeric(songdata$vowelCategory)))
stressCorr <- abs(cor(as.numeric(songdata$stress), as.numeric(songdata$vowelCategory)))
dataRow <- data.frame()
dataRow <- c(as.character(songlist[[x]]), as.numeric(pitchCorr), as.numeric(beatCorr), as.numeric(beatStrengthCorr), as.numeric(durCorr), as.numeric(stressCorr))
correlations <- rbind(correlations, dataRow)
}
colnames(correlations) <- c('song', 'pitch', 'beat', 'beatStrength', 'duration', 'stress')
correlations
corpus <- data.frame()
corpus <- read.csv('ParsedTextAndMusic/00-corpus.csv')
features <- colnames(corpus)
songlist <- corpus$song[!duplicated(corpus$song),]
correlations <- data.frame()
for(x in 1:length(songlist)) {
songdata <- data.frame()
songdata <- subset(corpus, corpus$song == songlist[[x]])
pitchCorr <- abs(cor(as.numeric(songdata$diatonicNumber), as.numeric(songdata$vowelCategory)))
beatCorr <- abs(cor(as.numeric(songdata$beat), as.numeric(songdata$vowelCategory)))
beatStrengthCorr <- abs(cor(as.numeric(songdata$beatStrength), as.numeric(songdata$vowelCategory)))
durCorr <- abs(cor(as.numeric(songdata$duration), as.numeric(songdata$vowelCategory)))
stressCorr <- abs(cor(as.numeric(songdata$stress), as.numeric(songdata$vowelCategory)))
dataRow <- data.frame()
dataRow <- c(as.factor(songlist[[x]]), as.numeric(pitchCorr), as.numeric(beatCorr), as.numeric(beatStrengthCorr), as.numeric(durCorr), as.numeric(stressCorr))
correlations <- rbind(correlations, dataRow)
}
colnames(correlations) <- c('song', 'pitch', 'beat', 'beatStrength', 'duration', 'stress')
correlations
corpus <- data.frame()
corpus <- read.csv('ParsedTextAndMusic/00-corpus.csv')
features <- colnames(corpus)
songlist <- corpus$song[!duplicated(corpus$song),]
correlations <- data.frame()
for(x in 1:length(songlist)) {
songdata <- data.frame()
songdata <- subset(corpus, corpus$song == songlist[[x]])
pitchCorr <- abs(cor(as.numeric(songdata$diatonicNumber), as.numeric(songdata$vowelCategory)))
beatCorr <- abs(cor(as.numeric(songdata$beat), as.numeric(songdata$vowelCategory)))
beatStrengthCorr <- abs(cor(as.numeric(songdata$beatStrength), as.numeric(songdata$vowelCategory)))
durCorr <- abs(cor(as.numeric(songdata$duration), as.numeric(songdata$vowelCategory)))
stressCorr <- abs(cor(as.numeric(songdata$stress), as.numeric(songdata$vowelCategory)))
dataRow <- data.frame()
dataRow <- c(as.factor(as.character(songlist[[x]])), as.numeric(pitchCorr), as.numeric(beatCorr), as.numeric(beatStrengthCorr), as.numeric(durCorr), as.numeric(stressCorr))
correlations <- rbind(correlations, dataRow)
}
colnames(correlations) <- c('song', 'pitch', 'beat', 'beatStrength', 'duration', 'stress')
correlations
corpus <- data.frame()
corpus <- read.csv('ParsedTextAndMusic/00-corpus.csv')
features <- colnames(corpus)
songlist <- corpus$song[!duplicated(corpus$song),]
correlations <- data.frame()
for(x in 1:length(songlist)) {
songdata <- data.frame()
songdata <- subset(corpus, corpus$song == songlist[[x]])
pitchCorr <- abs(cor(as.numeric(songdata$diatonicNumber), as.numeric(songdata$vowelCategory)))
beatCorr <- abs(cor(as.numeric(songdata$beat), as.numeric(songdata$vowelCategory)))
beatStrengthCorr <- abs(cor(as.numeric(songdata$beatStrength), as.numeric(songdata$vowelCategory)))
durCorr <- abs(cor(as.numeric(songdata$duration), as.numeric(songdata$vowelCategory)))
stressCorr <- abs(cor(as.numeric(songdata$stress), as.numeric(songdata$vowelCategory)))
dataRow <- data.frame()
dataRow <- c(as.factor(songlist[[x]]), as.numeric(pitchCorr), as.numeric(beatCorr), as.numeric(beatStrengthCorr), as.numeric(durCorr), as.numeric(stressCorr))
correlations <- rbind(correlations, dataRow)
}
colnames(correlations) <- c('song', 'pitch', 'beat', 'beatStrength', 'duration', 'stress')
correlations
corpus <- data.frame()
corpus <- read.csv('ParsedTextAndMusic/00-corpus.csv')
features <- colnames(corpus)
songlist <- unique(corpus$song)
correlations <- data.frame()
for(x in 1:length(songlist)) {
songdata <- data.frame()
songdata <- subset(corpus, corpus$song == songlist[[x]])
pitchCorr <- abs(cor(as.numeric(songdata$diatonicNumber), as.numeric(songdata$vowelCategory)))
beatCorr <- abs(cor(as.numeric(songdata$beat), as.numeric(songdata$vowelCategory)))
beatStrengthCorr <- abs(cor(as.numeric(songdata$beatStrength), as.numeric(songdata$vowelCategory)))
durCorr <- abs(cor(as.numeric(songdata$duration), as.numeric(songdata$vowelCategory)))
stressCorr <- abs(cor(as.numeric(songdata$stress), as.numeric(songdata$vowelCategory)))
dataRow <- data.frame()
dataRow <- c(as.factor(songlist[[x]]), as.numeric(pitchCorr), as.numeric(beatCorr), as.numeric(beatStrengthCorr), as.numeric(durCorr), as.numeric(stressCorr))
correlations <- rbind(correlations, dataRow)
}
colnames(correlations) <- c('song', 'pitch', 'beat', 'beatStrength', 'duration', 'stress')
correlations
songlist
class(songlist)
list(songlist)
class(list(songlist))
corpus <- data.frame()
corpus <- read.csv('ParsedTextAndMusic/00-corpus.csv')
features <- colnames(corpus)
songlist <- list(unique(corpus$song))
correlations <- data.frame()
for(x in 1:length(songlist)) {
songdata <- data.frame()
songdata <- subset(corpus, corpus$song == songlist[[x]])
pitchCorr <- abs(cor(as.numeric(songdata$diatonicNumber), as.numeric(songdata$vowelCategory)))
beatCorr <- abs(cor(as.numeric(songdata$beat), as.numeric(songdata$vowelCategory)))
beatStrengthCorr <- abs(cor(as.numeric(songdata$beatStrength), as.numeric(songdata$vowelCategory)))
durCorr <- abs(cor(as.numeric(songdata$duration), as.numeric(songdata$vowelCategory)))
stressCorr <- abs(cor(as.numeric(songdata$stress), as.numeric(songdata$vowelCategory)))
dataRow <- data.frame()
dataRow <- c(as.factor(songlist[[x]]), as.numeric(pitchCorr), as.numeric(beatCorr), as.numeric(beatStrengthCorr), as.numeric(durCorr), as.numeric(stressCorr))
correlations <- rbind(correlations, dataRow)
}
colnames(correlations) <- c('song', 'pitch', 'beat', 'beatStrength', 'duration', 'stress')
correlations
corpus <- data.frame()
corpus <- read.csv('ParsedTextAndMusic/00-corpus.csv')
features <- colnames(corpus)
songlist <- list(unique(corpus$song))
correlations <- data.frame()
for(x in 1:length(songlist)) {
songdata <- data.frame()
songdata <- subset(corpus, corpus$song == songlist[x])
pitchCorr <- abs(cor(as.numeric(songdata$diatonicNumber), as.numeric(songdata$vowelCategory)))
beatCorr <- abs(cor(as.numeric(songdata$beat), as.numeric(songdata$vowelCategory)))
beatStrengthCorr <- abs(cor(as.numeric(songdata$beatStrength), as.numeric(songdata$vowelCategory)))
durCorr <- abs(cor(as.numeric(songdata$duration), as.numeric(songdata$vowelCategory)))
stressCorr <- abs(cor(as.numeric(songdata$stress), as.numeric(songdata$vowelCategory)))
dataRow <- data.frame()
dataRow <- c(as.factor(songlist[x]), as.numeric(pitchCorr), as.numeric(beatCorr), as.numeric(beatStrengthCorr), as.numeric(durCorr), as.numeric(stressCorr))
correlations <- rbind(correlations, dataRow)
}
colnames(correlations) <- c('song', 'pitch', 'beat', 'beatStrength', 'duration', 'stress')
correlations
?data.frame
corpus <- data.frame()
corpus <- read.csv('ParsedTextAndMusic/00-corpus.csv')
features <- colnames(corpus)
songlist <- unique(corpus$song)
correlations <- data.frame()
for(x in 1:length(songlist)) {
songdata <- data.frame()
songdata <- subset(corpus, corpus$song == songlist[[x]])
pitchCorr <- abs(cor(as.numeric(songdata$diatonicNumber), as.numeric(songdata$vowelCategory)))
beatCorr <- abs(cor(as.numeric(songdata$beat), as.numeric(songdata$vowelCategory)))
beatStrengthCorr <- abs(cor(as.numeric(songdata$beatStrength), as.numeric(songdata$vowelCategory)))
durCorr <- abs(cor(as.numeric(songdata$duration), as.numeric(songdata$vowelCategory)))
stressCorr <- abs(cor(as.numeric(songdata$stress), as.numeric(songdata$vowelCategory)))
dataRow <- data.frame()
dataRow <- c(as.factor(songlist[[x]]), as.numeric(pitchCorr), as.numeric(beatCorr), as.numeric(beatStrengthCorr), as.numeric(durCorr), as.numeric(stressCorr))
correlations <- rbind(correlations, dataRow)
}
colnames(correlations) <- c('song', 'pitch', 'beat', 'beatStrength', 'duration', 'stress')
correlations
songlist[[17]]
corpus <- data.frame()
corpus <- read.csv('ParsedTextAndMusic/00-corpus.csv')
features <- colnames(corpus)
songlist <- unique(corpus$song)
correlations <- data.frame()
for(x in 1:length(songlist)) {
songdata <- data.frame()
songdata <- subset(corpus, corpus$song == songlist[[x]])
pitchCorr <- abs(cor(as.numeric(songdata$diatonicNumber), as.numeric(songdata$vowelCategory)))
beatCorr <- abs(cor(as.numeric(songdata$beat), as.numeric(songdata$vowelCategory)))
beatStrengthCorr <- abs(cor(as.numeric(songdata$beatStrength), as.numeric(songdata$vowelCategory)))
durCorr <- abs(cor(as.numeric(songdata$duration), as.numeric(songdata$vowelCategory)))
stressCorr <- abs(cor(as.numeric(songdata$stress), as.numeric(songdata$vowelCategory)))
dataRow <- data.frame()
dataRow <- c(as.factor(songlist[[x]]), songlist[[x]], as.numeric(pitchCorr), as.numeric(beatCorr), as.numeric(beatStrengthCorr), as.numeric(durCorr), as.numeric(stressCorr))
correlations <- rbind(correlations, dataRow)
}
colnames(correlations) <- c('song', 'name', pitch', 'beat', 'beatStrength', 'duration', 'stress')
correlations
corpus <- data.frame()
corpus <- read.csv('ParsedTextAndMusic/00-corpus.csv')
features <- colnames(corpus)
songlist <- unique(corpus$song)
correlations <- data.frame()
for(x in 1:length(songlist)) {
songdata <- data.frame()
songdata <- subset(corpus, corpus$song == songlist[[x]])
pitchCorr <- abs(cor(as.numeric(songdata$diatonicNumber), as.numeric(songdata$vowelCategory)))
beatCorr <- abs(cor(as.numeric(songdata$beat), as.numeric(songdata$vowelCategory)))
beatStrengthCorr <- abs(cor(as.numeric(songdata$beatStrength), as.numeric(songdata$vowelCategory)))
durCorr <- abs(cor(as.numeric(songdata$duration), as.numeric(songdata$vowelCategory)))
stressCorr <- abs(cor(as.numeric(songdata$stress), as.numeric(songdata$vowelCategory)))
dataRow <- data.frame()
dataRow <- c(as.factor(songlist[[x]]), as.character(songlist[[x]]), as.numeric(pitchCorr), as.numeric(beatCorr), as.numeric(beatStrengthCorr), as.numeric(durCorr), as.numeric(stressCorr))
correlations <- rbind(correlations, dataRow)
}
colnames(correlations) <- c('song', 'name', pitch', 'beat', 'beatStrength', 'duration', 'stress')
correlations
corpus <- data.frame()
corpus <- read.csv('ParsedTextAndMusic/00-corpus.csv')
features <- colnames(corpus)
songlist <- unique(corpus$song)
correlations <- data.frame()
for(x in 1:length(songlist)) {
songdata <- data.frame(song)
songdata <- subset(corpus, corpus$song == songlist[[x]])
pitchCorr <- abs(cor(as.numeric(songdata$diatonicNumber), as.numeric(songdata$vowelCategory)))
beatCorr <- abs(cor(as.numeric(songdata$beat), as.numeric(songdata$vowelCategory)))
beatStrengthCorr <- abs(cor(as.numeric(songdata$beatStrength), as.numeric(songdata$vowelCategory)))
durCorr <- abs(cor(as.numeric(songdata$duration), as.numeric(songdata$vowelCategory)))
stressCorr <- abs(cor(as.numeric(songdata$stress), as.numeric(songdata$vowelCategory)))
dataRow <- data.frame()
dataRow <- c(as.factor(songlist[[x]]), as.numeric(pitchCorr), as.numeric(beatCorr), as.numeric(beatStrengthCorr), as.numeric(durCorr), as.numeric(stressCorr))
correlations <- rbind(correlations, dataRow)
}
colnames(correlations) <- c('song', 'pitch', 'beat', 'beatStrength', 'duration', 'stress')
correlations
corpus <- data.frame()
corpus <- read.csv('ParsedTextAndMusic/00-corpus.csv')
features <- colnames(corpus)
songlist <- unique(corpus$song)
correlations <- data.frame()
for(x in 1:length(songlist)) {
songdata <- data.frame(song)
songdata <- subset(corpus, corpus$song == songlist[[x]])
pitchCorr <- cor(as.numeric(songdata$diatonicNumber), as.numeric(songdata$vowelCategory))
beatCorr <- cor(as.numeric(songdata$beat), as.numeric(songdata$vowelCategory))
beatStrengthCorr <- cor(as.numeric(songdata$beatStrength), as.numeric(songdata$vowelCategory))
durCorr <- cor(as.numeric(songdata$duration), as.numeric(songdata$vowelCategory))
stressCorr <- cor(as.numeric(songdata$stress), as.numeric(songdata$vowelCategory))
dataRow <- data.frame()
dataRow <- c(as.factor(songlist[[x]]), as.numeric(pitchCorr), as.numeric(beatCorr), as.numeric(beatStrengthCorr), as.numeric(durCorr), as.numeric(stressCorr))
correlations <- rbind(correlations, dataRow)
}
colnames(correlations) <- c('song', 'pitch', 'beat', 'beatStrength', 'duration', 'stress')
correlations
songlist[[10]]
corpus
colnames(corpus)
corpus <- data.frame()
corpus <- read.csv('ParsedTextAndMusic/00-corpus.csv')
features <- colnames(corpus)
songlist <- unique(corpus$song)
correlations <- data.frame()
for(x in 1:length(songlist)) {
songdata <- data.frame(song)
songdata <- subset(corpus, corpus$song == songlist[[x]])
pitchCorr <- cor(as.numeric(songdata$diatonicNumber), as.numeric(songdata$vowelCategory))
beatCorr <- cor(as.numeric(songdata$beat), as.numeric(songdata$vowelCategory))
beatStrengthCorr <- cor(as.numeric(songdata$beatStrength), as.numeric(songdata$vowelCategory))
durCorr <- cor(as.numeric(songdata$duration), as.numeric(songdata$vowelCategory))
stressCorr <- cor(as.numeric(songdata$stress), as.numeric(songdata$vowelCategory))
dataRow <- data.frame()
dataRow <- c(as.factor(songlist[[x]]), as.numeric(pitchCorr), as.numeric(beatCorr), as.numeric(beatStrengthCorr), as.numeric(durCorr), as.numeric(stressCorr))
correlations <- rbind(correlations, dataRow)
}
colnames(correlations) <- c('song', 'pitch', 'beat', 'beatStrength', 'duration', 'stress')
correlations
x <- 1:20
y <- 1-4
plot x~y
plot (x~y)
??remove
rm(list=ls(all=TRUE))
install.packages('knitr')
install.packages('knitr')
getwd()
dir()
corpus <- read.csv('parsedTextAndMusic/00-corpus.csv')
corpus
colnames(corpus)
hist(corpus$diatonicNumber)
hist(corpus$beat)
hist(corpus$beatStrength)
hist(corpus$vowelCategory)
hist(corpus$diatonicNumber)
hist(corpus$duration)
class(corpus$duration)
hist(as.numeric(corpus$duration))
hist(corpus$diatonicNumber)
plot(corpus$diatonicNumber~corpus$song)
colnames(corpus)
plot(corpus$duration~corpus$song)
plot(corpus$vowelCategory~corpus$song)
plot(corpus$IPA~corpus$song)
plot(corpus$diatonicNumber~corpus$song)
anova(lm(corpus$diatonicNumber~corpus$song))
??anova
data(state.x77)
statedata=as.data.frame(state.x77)
colnames(statedata)
plot(life.exp~inc, data=statedata)
colnames(statedata)=c("popu", "inc", "illit", "life.exp", "murder", "hs.grad", "frost", "area")
plot(life.exp~inc, data=statedata)
cor(statedata[,"life.exp"], statedata[,"inc"])
plot(life.exp~inc, data=statedata, type="n")
text(life.exp~inc, data=statedata, state.abb)
model1=lm(life.exp~inc, data=statedata)
model1
??lm
?lm
plot(life.exp~inc, data=statedata,
xlab="Life Expectancy", ylab="Income")
abline(model1)
getwd()
liebe <- data.frame()
liebe <- read.csv('parsedTextAndMusic/DieLiebeFarbe.csv')
liebe
plot(liebe$diatonicNumber~liebe$vowelCategory)
plot(corpus$diatonicNumber~corpus$vowelCategory)
plot(corpus$diatonicNumber~corpus$duration)
plot(liebe$diatonicNumber~liebe$duration)
plot(liebe$diatonicNumber~liebe$stress)
plot(corpus$diatonicNumber~corpus$stress)
colnames(corpus)
plot(corpus$beatStrength~corpus$stress)
plot(corpus$stress~corpus$beatStrength)
plot(corpus$diatonicNumber)
plot(corpus$vowelCategory)
plot(corpus$vowelCategory~corpus@song)
plot(corpus$song~corpus@vowelCategory)
plot(corpus$vowelCategory~corpus$song)
plot(corpus$diatonicNumber~corpus$vowelCategory)
plot(corpus$song~corpus$diatonicNumber)
plot(corpus$diatonicNumber~corpus$song)
corpus <- data.frame()
corpus <- read.csv('parsedTextAndMusic/00-corpus.csv')
corpus
plot(corpus$diatonicNumber~corpus$song)
liebe <- data.frame()
liebe <- read.csv('parsedTextAndMusic/DieLiebeFarbe.csv')
plot(liebe$diatonicNumber)
plot(liebe[liebe$beatStrength==1]$diatonicNumber)
plot(liebe[liebe$beatStrength==1,]$diatonicNumber)
plot(liebe[liebe$IPA=="'gɾyn",]$diatonicNumber)
plot(liebe[liebe$IPA=="'gɾyn",]$diatonicNumber)
liebe[lieve$IPA=="'gɾyn"]
liebe[liebe$IPA=="'gɾyn"]
liebe[liebe$IPA=="'gɾyn",]
liebe$IPA
liebe[liebe$IPA=="'gÉ¾yn",]
plot(liebe[liebe$IPA=="'gÉ¾yn",]$diatonicNumber)
plot(corpus[corpus$IPA=="'gÉ¾yn",]$diatonicNumber)
plot(corpus[corpus$IPA=="'gÉ¾yn",]$song~corpus[corpus$IPA=="'gÉ¾yn",]$diatonicNumber)
plot(corpus[corpus$IPA=="'gÉ¾yn",]$diatonicNumber~corpus[corpus$IPA=="'gÉ¾yn",]$song)
plot(corpus$diatonicNumber~corpus$song)
plot(corpus[corpus$IPA=="'gÉ¾yn",]$diatonicNumber~corpus[corpus$IPA=="'gÉ¾yn",]$song)
plot(corpus$diatonicNumber~corpus$song)
plot(corpus[corpus$IPA=="'gÉ¾yn",]$diatonicNumber~corpus[corpus$IPA=="'gÉ¾yn",]$song)
mean(liebe$diatonicNumber)
mean(liebe$diatonicNumber*liebe$duration)
liebe$diatonicNumber*liebe$duration
liebe$diatonicNumber
mean(liebe$duration)
liebe$diatonicNumber*liebe$duration/mean(liebe$duration)
mean(liebe$diatonicNumber*liebe$duration/mean(liebe$duration))
plot(corpus$diatonicNumber*corpus$duration/mean(corpus$duration)~corpus$song)
plot((corpus$diatonicNumber*corpus$duration/mean(corpus$duration))~corpus$song)
plot((as.numeric(corpus$diatonicNumber)*as.numeric(corpus$duration)/mean(corpus$duration))~corpus$song)
plot((as.numeric(corpus$diatonicNumber)*as.numeric(corpus$duration)/mean(as.numeric(corpus$duration))~corpus$song)
plot((as.numeric(corpus$diatonicNumber)*as.numeric(corpus$duration)/mean(as.numeric(corpus$duration)))~corpus$song)
plot(corpus$diatonicNumber~corpus$song)
plot((as.numeric(corpus$diatonicNumber)*as.numeric(corpus$duration)/mean(as.numeric(corpus$duration)))~corpus$song)
plot(corpus$diatonicNumber~corpus$song)
plot(corpus[corpus$IPA=="'gÉ¾yn",]$diatonicNumber~corpus[corpus$IPA=="'gÉ¾yn",]$song)
songList <- unique(corpus$song)
pitchList <- unique(corpus$pitch)
pitchCount <- data.frame()
colnames(pitchCount) <- c('song', 'pitch', 'count')
songList <- unique(corpus$song)
pitchList <- unique(corpus$pitch)
pitchCount <- data.frame(song=character(), pitch=numeric(), count=numeric())
table(corpus$diatonicNumber)
hist(table(corpus$diatonicNumber))
hist(corpus$diatonicNumber)
a <- data.frame(table(corpus$diatonicNumber))
a
hist(a)
hist(a$Freq)
a[35]
a[35,]
a[,35]
a$Freq[a$Var1=35]
a$Freq[a$Var1=35,]
?rep
?seq
?dim
corpusExpand <- corpus[rep(seq(dim(corpus)[1]),as.numeric(corpus$duration)*12,]
corpusExpand <- corpus[rep(seq(dim(corpus)[1]),as.numeric(corpus$duration)*12),]
corpusExpand
plot(corpus$pitch~corpus$diatonicNumber)
plot(corpus$diatonicNumber~corpus$song)
plot(corpusExpand$diatonicNumber~corpusExpand$song)
plot(corpus$diatonicNumber~corpus$song)
plot(corpusExpand$diatonicNumber~corpusExpand$song)
plot(corpus$diatonicNumber~corpus$song)
plot(corpusExpand$diatonicNumber~corpusExpand$song)
plot(corpus$diatonicNumber~corpus$song)
plot(corpusExpand$diatonicNumber~corpusExpand$song)
plot(corpusExpand[corpusExpand$IPA=="'gÉ¾yn",]$diatonicNumber~corpusExpand[corpusExpand$IPA=="'gÉ¾yn",]$song)
plot(corpusExpand$diatonicNumber~corpusExpand$song)
plot(corpusExpand[corpusExpand$IPA=="'gÉ¾yn",]$diatonicNumber~corpusExpand[corpusExpand$IPA=="'gÉ¾yn",]$song)
plot(corpusExpand$diatonicNumber~corpusExpand$song)
?confint
plot(corpus$diatonicNumber~corpus$song)
plot(corpusExpand$diatonicNumber~corpusExpand$song)
plot(corpusExpand[corpusExpand$IPA=="'gÉ¾yn",]$diatonicNumber~corpusExpand[corpusExpand$IPA=="'gÉ¾yn",]$song)
plot(corpus$diatonicNumber~corpus$song)
plot(corpusExpand$diatonicNumber~corpusExpand$song)
plot(corpusExpand[corpusExpand$IPA=="'gÉ¾yn",]$diatonicNumber~corpusExpand[corpusExpand$IPA=="'gÉ¾yn",]$song)
plot(corpusExpand$diatonicNumber~corpusExpand$song)
plot(corpus$diatonicNumber~corpus$song)
plot(corpusExpand[corpusExpand$IPA=="'gÉ¾yn",]$diatonicNumber~corpusExpand[corpusExpand$IPA=="'gÉ¾yn",]$song)
plot(corpusExpand$diatonicNumber~corpusExpand$song)
plot(corpusExpand[corpusExpand$IPA=="'gÉ¾yn",]$diatonicNumber~corpusExpand[corpusExpand$IPA=="'gÉ¾yn",]$song)
plot(corpusExpand$stress~corpusExpand$beatStrength)
plot(corpusExpand$beatStrength~corpusExpand$stress)
